import {MessageEmbed, Permissions, MessageActionRow, Modal, TextInputComponent, MessageSelectMenu} from 'discord.js';
import { QuickDB, MySQLDriver } from 'quick.db';

import USER_DATABASE from '../data/enums/MySQL/profile_database.json' assert { type: 'json' };
import COLOR from '../data/enums/colors.json' assert { type: 'json' };
import APP from '../data/configs/applicationConfigs.json' assert { type: 'json' };

const mysql = new MySQLDriver(USER_DATABASE)
await mysql.connect();

const db = new QuickDB({ driver: mysql });

export default {
	name: 'interactionCreate',
	once: false,
	async execute(interaction) {
        if (interaction.constructor.name !== 'ModalSubmitInteraction') return;

        const userDB = db.table(`user_${interaction.user.id}`);

        if (interaction.customId === 'applicationRequest') {

            const guild = interaction.guild;
            const channel = guild.channels.cache.get(APP.applicationChannel);

            await interaction.deferReply({ ephemeral: true }).catch(console.error);

            const gameName = interaction.fields.getTextInputValue('gameName');
            const aboutYou = interaction.fields.getTextInputValue('aboutYou');
            const yearsOld = interaction.fields.getTextInputValue('yearsOld');
            const howFind = interaction.fields.getTextInputValue('howFind');

            let embed_author = new MessageEmbed()
                .setAuthor({ name: interaction.guild.name, iconURL: interaction.guild.iconURL({format: 'png', size: 1024}) || 'https://cdn.discordapp.com/embed/avatars/0.png' })
                .setDescription('üì• –°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—É—é –∞–Ω–∫–µ—Ç—É! –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞ —Ä–∞—Å–º–æ—Ç—Ä–µ–Ω–∏–µ. üí≠ –û—Ç–≤–µ—Ç –ø–æ—Å—Ç—É–ø–∏—Ç –∫ –í–∞–º –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è, —É–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –æ–Ω–∏ –æ—Ç–∫—Ä—ã—Ç—ã!')
                .addFields(
                    { name: 'üñ•Ô∏è –£–∫–∞–∑–∞–Ω–Ω—ã–π –Ω–∏–∫:', value: `\`\`\`${gameName}\`\`\``  },
                    { name: 'üë§ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –í–∞—Å:', value: `\`\`\`${aboutYou}\`\`\`` },
                    { name: 'üßë –í–∞—à –≤–æ–∑—Ä–∞—Å—Ç:', value: `\`\`\`${yearsOld}\`\`\`` },
                    { name: 'üë• –ö–∞–∫ –í—ã –Ω–∞—à–ª–∏ –Ω–∞—Å:', value: `\`\`\`${howFind}\`\`\`` }
                )
                .setThumbnail(`https://cravatar.eu/helmhead/${gameName}` || 'https://www.dropbox.com/s/caysh8b452z05ux/invalid_nickname.png?dl=1')
                .setColor(COLOR.PRIMARY);

            let embed = new MessageEmbed()
            .setAuthor({ name: interaction.user.tag, iconURL: interaction.user.avatarURL({format: 'png', size: 1024}) || 'https://cdn.discordapp.com/embed/avatars/0.png' })
            .addFields(
                { name: 'üñ•Ô∏è –ò–≥—Ä–æ–≤–æ–π –Ω–∏–∫:', value: `\`\`\`${gameName}\`\`\``  },
                { name: 'üë§ –ë–∏–æ–≥—Ä–∞—Ñ–∏—è:', value: `\`\`\`${aboutYou}\`\`\``  },
                { name: 'üßë –í–æ–∑—Ä–∞—Å—Ç:', value: `\`\`\`${yearsOld}\`\`\`` },
                { name: 'üë• –ö–∞–∫ –Ω–∞—à–ª–∏ –ø—Ä–æ–µ–∫—Ç:', value: `\`\`\`${howFind}\`\`\``  }
            )
            .setThumbnail(`https://cravatar.eu/helmhead/${gameName}` || 'https://www.dropbox.com/s/caysh8b452z05ux/invalid_nickname.png?dl=1')
            .setColor(COLOR.PRIMARY);

            const row = new MessageActionRow()
            .addComponents(
                new MessageSelectMenu()
                    .setCustomId('applicationSettings')
                    .setPlaceholder('–î–µ–π—Å—Ç–≤–∏—è...')
                    .addOptions([
                        {
                            label: '–ü—Ä–∏–Ω—è—Ç—å',
                            emoji: '‚úÖ',
                            description: '–ü—Ä–∏–Ω—è—Ç—å –∞–Ω–∫–µ—Ç—É',
                            value: 'acceptApplication',
                        },
                        {
                            label: '–û—Ç–∫–∞–∑–∞—Ç—å',
                            emoji: 'üö´',
                            description: '–û—Ç–∫–∞–∑–∞—Ç—å –∞–Ω–∫–µ—Ç—É',
                            value: 'rejectApplication',
                        },
                        {
                            label: '–û—à–∏–±–∫–∞ –≤ –∞–Ω–∫–µ—Ç–µ',
                            emoji: '‚ùî',
                            description: '–ê–Ω–∫–µ—Ç–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –æ—à–∏–±–∫—É',
                            value: 'errorApplication',
                        }
                    ])
            );

            await userDB.set('nickname', `${gameName}`);
            await userDB.set('applicationStatus', 'pending');

            return await interaction.editReply({ embeds: [embed_author] }), await channel.send({ content: `${interaction.user}`, embeds: [embed], components: [row] })
            
        }
	}
};